Timer unit: 1e-07 s

Total time: 66.5511 s
File: C:\Users\armin\Desktop\democs2analysis\accuracyanalysis.py
Function: analyze_all_players at line 333

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   333                                           def analyze_all_players(demo_path):
   334                                               """
   335                                               Calculate various performance metrics for multiple players and return a dataframe.
   336                                               The metrics include:
   337                                                 - Overall accuracy (calculate_accuracy)
   338                                                 - Accuracy when enemy is (assumed) engaged (calculate_accuracy_by_window)
   339                                                 - Headshot accuracy (calculate_accuracy)
   340                                                 - Average time to damage (calculate_avg_time_to_damage)
   341                                                 - Average crosshair placement adjustment (calculate_crosshair_placement)
   342                                                 - Average crosshair placement error (calculate_victim_crosshair_placement)
   343                                               """
   344         1   24709506.0    2e+07      3.7      player_hurt_df, weapon_fire_df, df = load_demo_data(demo_path)
   345                                           
   346         1       7264.0   7264.0      0.0      usernames = weapon_fire_df["user_name"].unique()
   347                                           
   348         1          3.0      3.0      0.0      all_data = []  # List to store player results
   349                                           
   350        11        129.0     11.7      0.0      for username in usernames:
   351                                                   # Calculate metrics using existing functions
   352        10    2836094.0 283609.4      0.4          accuracy, headshot_accuracy = calculate_accuracy(username, player_hurt_df, weapon_fire_df)
   353        10  381691589.0    4e+07     57.4          avg_ttd = calculate_avg_time_to_damage(username, player_hurt_df, df)
   354        10    8522201.0 852220.1      1.3          accuracy_enemy_spotted = calculate_accuracy_by_window(username, player_hurt_df, weapon_fire_df)
   355        10  247736847.0    2e+07     37.2          crosshair_placement = calculate_crosshair_placement_consecutive(username, player_hurt_df, df)
   356                                                   # victim_crosshair_error = calculate_victim_crosshair_placement(username, player_hurt_df, df)
   357                                           
   358        20        173.0      8.7      0.0          all_data.append({
   359        10         16.0      1.6      0.0              "username": username,
   360        10        347.0     34.7      0.0              "accuracy": f"{accuracy:.2f}",
   361        10         70.0      7.0      0.0              "accuracy_spotted": f"{accuracy_enemy_spotted:.2f}",
   362        10         53.0      5.3      0.0              "hs_accuracy": f"{headshot_accuracy:.2f}",
   363        10        304.0     30.4      0.0              "time_to_damage": f"{avg_ttd:.3f}" if avg_ttd is not None else "N/A",
   364        10         52.0      5.2      0.0              "crosshair_placement": f"{crosshair_placement:.2f}" if crosshair_placement is not None else "N/A",
   365                                                       # "crosshair_error": f"{victim_crosshair_error:.2f}" if victim_crosshair_error is not None else "N/A"
   366                                                   })
   367                                           
   368                                               # Convert the collected data into a DataFrame
   369         1       6076.0   6076.0      0.0      result_df = pd.DataFrame(all_data)
   370         1          2.0      2.0      0.0      return result_df

Execution time: 66.565855 seconds
